package dish.action;

import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import javax.servlet.ServletException;
import javax.servlet.annotation.MultipartConfig;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import javax.servlet.http.Part;

import dish.service.DishServiceImpl;
import dish.service.IDishService;
import vo.DishVO;
import vo.IngredientVO;
import vo.MemberVO;
import vo.RecipeVO;
import vo.UploadDetail;

@WebServlet("/InsertRecipe.do")
@MultipartConfig(fileSizeThreshold=1024 * 1024 * 10, maxFileSize=1024*1024*30, maxRequestSize=1024*1024*60)
public class InsertRecipe extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		request.setCharacterEncoding("UTF-8");
		//Upload한 파일 저장될디렉토리 설정
		String uploadPath ="D:/A_TeachingMaterial/4.MiddleProject/workspace/recibee/WebContent/jsp/pic";
		IDishService service = DishServiceImpl.getInstance();
		
		DishVO dishVo = new DishVO();
		RecipeVO recipeVo = new RecipeVO();
		IngredientVO ingredientVo = new IngredientVO();
		List<UploadDetail> fileList = new ArrayList<UploadDetail>();
		
		String mth_name = request.getParameter("mth_name");
		int mth_code = service.GetMethodCode(mth_name);
		
		dishVo.setDish_name(request.getParameter("dish_name"));
		dishVo.setMth_code(mth_code);
		HttpSession session = request.getSession();
		MemberVO member = (MemberVO)session.getAttribute("Member");
		String mem_id = member.getMem_id();
		dishVo.setMem_id(mem_id);
		
		int num = 0;
		String fileName = "";
		
		for(Part part:request.getParts()) {
			fileName = extractFileName(part);
			
			if(!"".equals(fileName)) {
				UploadDetail detail = new UploadDetail();
				detail.setFileName(fileName);
				detail.setFileSize(part.getSize());
				try {
					part.write(fileName);
					
				} catch (Exception e) {
				}
			}
		}
	}

	
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		doGet(request, response);
	}
	
	private String extractFileName(Part part) {
		String fileName="";//파일명이 저장될 변수

		//Content-Disposition헤더 정보값을 가져온다.
		String contentDisposition = part.getHeader("Content-Disposition");

		//파일인지 아닌지를 비교하기 ==> filename이 있으면 file/ 없으면 일반 데이터
		String[] items = contentDisposition.split(";");
		for(String item:items) {
			//filename이 있는지 검사
			if(item.trim().startsWith("filename")){
				System.out.println("=======================================");
				System.out.println(fileName);
				//=의 다음다음번째 부터 끝에서부터 2번째까지
				fileName = item.substring(item.indexOf("=") + 2, item.length()-1);

			}
		}

		return fileName;
	}

}
